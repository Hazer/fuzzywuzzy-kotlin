apply plugin: 'com.android.library'
apply plugin: 'kotlin-multiplatform'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply from: rootProject.file('gradle/publish.gradle')

group 'com.willowtreeapps'
version '0.1'

kotlin {
    android {
        compilations.all {
            tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) { task ->
                kotlinOptions {
                    freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
                }
            }
        }
        publishLibraryVariants("release")
    }
    iosArm64("ios")
    iosX64("iosSim")

    targets.all { target ->
        if (target.name == 'android') return // Android handles this differently
        compilations.all { compilation ->
            tasks[compileKotlinTaskName].kotlinOptions {
                freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin("stdlib-common")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
            }
        }

        androidMain {
            dependencies {
                implementation kotlin("stdlib")
            }
        }
        androidTest {
            dependencies {
                implementation kotlin("test")
                implementation kotlin("test-junit")
                implementation 'junit:junit:4.12'
                implementation "androidx.test:core:1.1.0"
                implementation "androidx.test.ext:junit:1.1.0"
                implementation "org.robolectric:robolectric:4.0"
            }
        }

        iosSimMain.dependsOn iosMain
        iosSimTest.dependsOn iosTest

    }
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
    }

    testOptions.unitTests.includeAndroidResources = true
}

task iosTest(dependsOn: 'linkTestDebugExecutableIosSim') {
    doLast {
        def binary = kotlin.targets.iosSim.compilations.test.getBinary('EXECUTABLE', 'DEBUG')
        exec {
            commandLine 'xcrun', 'simctl', 'spawn', "iPhone XR", binary.absolutePath
        }
    }
}
tasks.check.dependsOn iosTest

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

